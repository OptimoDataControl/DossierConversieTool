{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "FileStream",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Set temp",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[USP_GetFileStreamsInParts]",
						"storedProcedureParameters": {
							"RowId": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.rowSourceId",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Database",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "-"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Update JSON",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "JSON",
					"value": {
						"value": "@replace(variables('temp'),concat('[FileStream:',pipeline().parameters.rowSourceId,']') ,variables('FS') )",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set temp",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "temp",
					"value": {
						"value": "@variables('JSON')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "FileStream",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('FileStream').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Set tempFS",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "tempFS",
								"value": {
									"value": "@variables('FS')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set FS",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set tempFS",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "part by id",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "FS",
								"value": {
									"value": "@concat(\n    variables('tempFS'),activity('part by id').output.firstRow.PART\n)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "part by id",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "[dbo].[USP_GetFileStreamsInParts]",
									"storedProcedureParameters": {
										"PartId": {
											"type": "Int32",
											"value": {
												"value": "@item().ID",
												"type": "Expression"
											}
										},
										"RowId": {
											"type": "Int32",
											"value": {
												"value": "@pipeline().parameters.rowSourceId",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "Database",
									"type": "DatasetReference",
									"parameters": {
										"TableName": "-"
									}
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"rowSourceId": {
				"type": "string",
				"defaultValue": "11916"
			},
			"JSON": {
				"type": "string",
				"defaultValue": {
					"KnSubject": {
						"Element": {
							"Fields": {
								"StId": 62,
								"Ds": "Eerstejaarsevaluatie werkgever - medewerker",
								"Da": "2022-09-28T04:29:28Z",
								"FvF1": 326
							},
							"Objects": [
								{
									"KnSubjectLink": {
										"Element": {
											"Fields": {
												"DoCRM": true,
												"SfTp": 2,
												"SfId": "3594",
												"AbId": 4264
											}
										}
									},
									"KnSubjectAttachment": {
										"Element": [
											{
												"Fields": {
													"FileName": "0006731327.pdf",
													"FileStream": "[FileStream:11916]"
												}
											}
										]
									}
								}
							]
						}
					}
				}
			}
		},
		"variables": {
			"temp": {
				"type": "String"
			},
			"JSON": {
				"type": "String"
			},
			"tempFS": {
				"type": "String"
			},
			"FS": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Upload"
		},
		"annotations": [],
		"lastPublishTime": "2024-01-09T14:25:00Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}